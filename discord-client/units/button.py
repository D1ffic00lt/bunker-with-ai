import discord
import httpx


class ControlButtons(discord.ui.View):
    def __init__(self, code):
        super().__init__(timeout=None)
        self.game_code = code

    async def send(self, attribute, user_id):
        async with httpx.AsyncClient() as client:
            try:
                await client.patch(
                    "http://api:9462/bunker/api/v1/reveal-characteristic/{}/{}".format(
                        self.game_code, user_id
                    ),
                    json={
                        "attribute": attribute
                    }
                )
            except httpx.TimeoutException:
                pass

    @discord.ui.button(label="–ü–æ–ª –∏ –í–æ–∑—Ä–∞—Å—Ç", style=discord.ButtonStyle.primary, emoji="üë¥")
    async def gender_and_age_callback(self, inter: discord.Interaction, button: discord.Button):
        button.disabled = True
        await inter.message.edit(view=self)
        await self.send("gender", inter.user.id)
        await self.send("age", inter.user.id)

        await inter.response.send_message("–í—Å–∫—Ä—ã—Ç–æ")
        message = await inter.original_response()
        await message.delete(delay=5)

    @discord.ui.button(label="–ó–¥–æ—Ä–æ–≤—å–µ", style=discord.ButtonStyle.primary, emoji="üíä")
    async def health_callback(self, inter: discord.Interaction, button: discord.Button):
        button.disabled = True
        await inter.message.edit(view=self)
        await self.send("health", inter.user.id)

        await inter.response.send_message("–í—Å–∫—Ä—ã—Ç–æ")
        message = await inter.original_response()
        await message.delete(delay=5)

    @discord.ui.button(label="–ü—Ä–æ—Ñ–µ—Å—Å–∏—è", style=discord.ButtonStyle.primary, emoji="üë©‚ÄçüöÄ")
    async def profession_callback(self, inter: discord.Interaction, button: discord.Button):
        button.disabled = True
        await inter.message.edit(view=self)
        await self.send("profession", inter.user.id)

        await inter.response.send_message("–í—Å–∫—Ä—ã—Ç–æ")
        message = await inter.original_response()
        await message.delete(delay=5)

    @discord.ui.button(label="–•–æ–±–±–∏", style=discord.ButtonStyle.primary, emoji="üíª")
    async def hobby_callback(self, inter: discord.Interaction, button: discord.Button):
        button.disabled = True
        await inter.message.edit(view=self)
        await self.send("hobby", inter.user.id)

        await inter.response.send_message("–í—Å–∫—Ä—ã—Ç–æ")
        message = await inter.original_response()
        await message.delete(delay=5)

    @discord.ui.button(label="–ë–∞–≥–∞–∂", style=discord.ButtonStyle.primary, emoji="üß≥")
    async def luggage_callback(self, inter: discord.Interaction, button: discord.Button):
        button.disabled = True
        await inter.message.edit(view=self)
        await self.send("luggage", inter.user.id)

        await inter.response.send_message("–í—Å–∫—Ä—ã—Ç–æ")
        message = await inter.original_response()
        await message.delete(delay=5)

    @discord.ui.button(label="–§–∞–∫—Ç 1", style=discord.ButtonStyle.primary, emoji="üíå")
    async def fact1_callback(self, inter: discord.Interaction, button: discord.Button):
        button.disabled = True
        await inter.message.edit(view=self)
        await self.send("fact1", inter.user.id)

        await inter.response.send_message("–í—Å–∫—Ä—ã—Ç–æ")
        message = await inter.original_response()
        await message.delete(delay=5)

    @discord.ui.button(label="–§–∞–∫—Ç 2", style=discord.ButtonStyle.primary, emoji="üíå")
    async def fact2_callback(self, inter: discord.Interaction, button: discord.Button):
        button.disabled = True
        await inter.message.edit(view=self)
        await self.send("fact2", inter.user.id)

        await inter.response.send_message("–í—Å–∫—Ä—ã—Ç–æ")
        message = await inter.original_response()
        await message.delete(delay=5)

    @discord.ui.button(label="–§–æ–±–∏—è", style=discord.ButtonStyle.primary, emoji="ü§°")
    async def phobia_callback(self, inter: discord.Interaction, button: discord.Button):
        button.disabled = True
        await inter.message.edit(view=self)
        await self.send("phobia", inter.user.id)
        await inter.response.send_message("–í—Å–∫—Ä—ã—Ç–æ")
        message = await inter.original_response()
        await message.delete(delay=5)

    @discord.ui.button(label="–ê–∫—Ç–∏–≤–Ω–∞—è –ö–∞—Ä—Ç–∞", style=discord.ButtonStyle.success, emoji="üé¥")
    async def action_card_callback(self, inter: discord.Interaction, button: discord.Button):
        button.disabled = True
        await inter.message.edit(view=self)
        await self.send("action_card", inter.user.id)
        async with httpx.AsyncClient() as client:
            try:
                response = await client.post(
                    "http://api:9462/bunker/api/v1/use-active-card/{}/{}".format(self.game_code, inter.user.id)
                )
                if response.status_code // 100 in [4, 5]:
                    await inter.response.send_message("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")
                    return
            except httpx.TimeoutException:
                await inter.response.send_message("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")
                return
        await inter.response.send_message("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ")
        message = await inter.original_response()
        await message.delete(delay=5)

    @discord.ui.button(label="–í—ã–π—Ç–∏", style=discord.ButtonStyle.red, emoji="‚ö∞Ô∏è")  # ü™¶
    async def exit_callback(self, inter: discord.Interaction, button: discord.Button):
        for i in self.children:
            i.disabled = True

        button.style = discord.ButtonStyle.secondary
        await inter.message.edit(view=self)
        self.stop()

        async with httpx.AsyncClient() as client:
            try:
                response = await client.patch(
                    "http://api:9462/bunker/api/v1/leave-game/{}/{}".format(self.game_code, inter.user.id)
                )
                if response.status_code // 100 in [4, 5]:
                    await inter.response.send_message("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")
                    return
            except httpx.TimeoutException:
                await inter.response.send_message("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")
                return
        await inter.response.send_message("–í—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã")
